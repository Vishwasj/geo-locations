{"version":3,"sources":["Components/SearchResult/index.js","Components/SearchHistory/index.js","Components/common/ErrorComponent/index.js","Components/SearchBox/index.js","App.js","index.js"],"names":["SearchResult","geoNames","map","geoName","name","countryName","lat","lng","geonameId","SearchHistory","searchHistory","history","index","ErrorComponent","message","className","SearchBox","searchRef","useRef","useState","setGeoNames","setSearchHistory","loading","setLoader","errorMessage","setErrorMessage","getGeoNames","e","a","preventDefault","searchText","current","value","process","username","REACT_APP_USER_NAME","maxRows","REACT_APP_MAX_ROWS","url","geoNameSearch","length","slice","axios","get","data","fetchedGeoNames","geonames","push","errorHandling","error","response","request","onSubmit","type","ref","onClick","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VA6BeA,G,MA1BM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,OAAO,gCACH,mFACA,kCACE,gCACA,+BACE,sCACA,yCACA,0CACA,gDAGF,gCACCA,EAASC,KAAI,SAAAC,GAAO,OACnB,+BACE,6BAAKA,EAAQC,OACb,6BAAKD,EAAQE,cACb,6BAAKF,EAAQG,MACb,6BAAKH,EAAQI,QAJNJ,EAAQK,wBCRdC,EAPO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,OAAO,gCACH,gDACCA,EAAcR,KAAI,SAACS,EAASC,GAAV,OAAkB,8BAAkBD,GAARC,UCExCC,G,MAJQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAO,qBAAKC,UAAU,QAAf,SAAwBD,MCuDpBE,EApDG,WAEd,IAAMC,EAAYC,mBAFE,EAGYC,mBAAS,MAHrB,mBAGblB,EAHa,KAGHmB,EAHG,OAIsBD,mBAAS,IAJ/B,mBAIbT,EAJa,KAIEW,EAJF,OAKSF,oBAAS,GALlB,mBAKbG,EALa,KAKJC,EALI,OAMoBJ,mBAAS,IAN7B,mBAMbK,EANa,KAMCC,EAND,KAQdC,EAAW,uCAAG,WAAMC,GAAN,+BAAAC,EAAA,6DAChBD,EAAEE,iBACIC,EAAab,EAAUc,QAAQC,MAFrB,EAGqDC,6LAAzCC,EAHZ,EAGTC,oBAAmDC,EAH1C,EAGsBC,mBAChCC,EAJU,+CAIoCR,EAJpC,oBAI0DM,EAJ1D,qBAI8EF,GACxFK,EAAgBT,GAA0B,MACvB,IAAzBpB,EAAc8B,OAAenB,EAAiB,GAAD,mBAAKX,EAAc+B,MAAM,IAAzB,CAA6BF,KAAkBlB,EAAiB,GAAD,mBAAKX,GAAL,CAAoB6B,KANhH,SAQZhB,GAAU,GACVH,EAAY,MATA,UAUSsB,IAAMC,IAAIL,GAVnB,iBAULM,EAVK,EAULA,KACDC,EAAkB,GACxBD,EAAKE,SAAS5C,KAAI,SAAAC,GAAO,OAAE0C,EAAgBE,KAAK5C,MAChDoB,GAAU,GACVH,EAAYyB,GACZpB,EAAgB,IAfJ,kDAkBZuB,EAAc,EAAD,IACbzB,GAAU,GAnBE,0DAAH,sDAuBXyB,EAAgB,SAAAC,GACfA,EAAMC,SAAUzB,EAAgB,wCAC3BwB,EAAME,QAAS1B,EAAgB,wCAClCA,EAAgBwB,EAAMnC,UAG/B,OACI,gCACI,uBAAMsC,SAAU1B,EAAhB,UACI,uBAAO2B,KAAK,OAAOtC,UAAU,YAAYuC,IAAKrC,IAC9C,wBAAQoC,KAAK,SAAStC,UAAU,eAAewC,QAAS7B,EAAa8B,SAAUlC,EAA/E,SACKA,EAAU,gDAA4B,+CAG9CZ,EAAc8B,OAAO,GAAK,cAAC,EAAD,CAAe9B,cAAeA,IACxDc,GAAgB,cAAC,EAAD,CAAgBV,QAASU,IACzCvB,IAAaA,EAASuC,OAAO,EAAI,cAAC,EAAD,CAAcvC,SAAUA,IAAc,cAAC,EAAD,CAAgBa,QAAQ,0BC3C7F2C,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8582cdab.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\n\r\nconst SearchResult = ({geoNames}) => {\r\n    return(<div>\r\n        <p>Displaying the Geo Names fetched for the search...</p>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Country</th>\r\n            <th>Latitude</th>\r\n            <th>Longitude</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {geoNames.map(geoName=>(\r\n            <tr key={geoName.geonameId}>\r\n              <td>{geoName.name}</td>\r\n              <td>{geoName.countryName}</td>\r\n              <td>{geoName.lat}</td>\r\n              <td>{geoName.lng}</td>\r\n            </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n    </div>)\r\n}\r\n\r\nexport default SearchResult","import React from 'react'\r\n\r\nconst SearchHistory = ({searchHistory}) => {\r\n    return(<div>\r\n        <b>Last 5 Searches</b>\r\n        {searchHistory.map((history, index)=><div key={index}>{history}</div>)}\r\n    </div>)\r\n}\r\n\r\nexport default SearchHistory","import React from 'react'\r\nimport './index.css'\r\n\r\nconst ErrorComponent = ({message}) => {\r\n    return(<div className=\"error\">{message}</div>)\r\n}\r\n\r\nexport default ErrorComponent","import React, {useRef, useState} from 'react'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport SearchResult from '../SearchResult'\r\nimport SearchHistory from '../SearchHistory'\r\nimport ErrorComponent from '../common/ErrorComponent'\r\n\r\nconst SearchBox = () => {\r\n\r\n    const searchRef = useRef()\r\n    const [geoNames, setGeoNames] = useState(null)\r\n    const [searchHistory, setSearchHistory] = useState([])\r\n    const [loading, setLoader] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    \r\n    const getGeoNames = async e => {\r\n        e.preventDefault()\r\n        const searchText = searchRef.current.value\r\n        const {REACT_APP_USER_NAME: username, REACT_APP_MAX_ROWS: maxRows} = process.env\r\n        const url = `http://api.geonames.org/searchJSON?q=${searchText}&maxRows=${maxRows}&username=${username}`\r\n        const geoNameSearch = searchText ? searchText : 'ALL'\r\n        searchHistory.length === 5 ? setSearchHistory([...searchHistory.slice(1), geoNameSearch]) : setSearchHistory([...searchHistory, geoNameSearch])\r\n        try{\r\n            setLoader(true)\r\n            setGeoNames(null)\r\n            const {data} = await axios.get(url)\r\n            const fetchedGeoNames = []\r\n            data.geonames.map(geoName=>fetchedGeoNames.push(geoName))\r\n            setLoader(false)\r\n            setGeoNames(fetchedGeoNames)\r\n            setErrorMessage('')\r\n        }\r\n        catch(error){\r\n            errorHandling(error)\r\n            setLoader(false)\r\n        }\r\n    }\r\n\r\n    const errorHandling = error => {\r\n        if(error.response) setErrorMessage('Server error in sending the response')\r\n        else if(error.request) setErrorMessage('Request from client was unsuccessful')\r\n        else setErrorMessage(error.message)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={getGeoNames}>\r\n                <input type=\"text\" className=\"searchBox\" ref={searchRef} />\r\n                <button type=\"submit\" className=\"searchButton\" onClick={getGeoNames} disabled={loading}>\r\n                    {loading ? <span>Searching...</span> : <span>Search</span>}\r\n                </button>\r\n            </form>\r\n            {searchHistory.length>0 && <SearchHistory searchHistory={searchHistory}/>}\r\n            {errorMessage && <ErrorComponent message={errorMessage} />}\r\n            {geoNames && (geoNames.length>0 ? <SearchResult geoNames={geoNames}/> : <ErrorComponent message='No Records Found' />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import './App.css'\nimport SearchBox from './Components/SearchBox'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBox />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}